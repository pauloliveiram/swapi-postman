pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("The response has all expected properties", () => {
    const responseJson = pm.response.json();

    pm.expect(responseJson.count).to.be.a('number');
    pm.expect(responseJson.next).to.include('https://swapi.dev/api/people/?page=');
    pm.expect(responseJson.previous).to.be.null;
    pm.expect(responseJson.results).to.be.an('array');
    pm.expect(responseJson.results[0].name).to.be.a('string');
    pm.expect(responseJson.results[0].height).to.be.a('string');
    pm.expect(responseJson.results[0].mass).to.be.a('string');
    pm.expect(responseJson.results[0].hair_color).to.be.a('string');
    pm.expect(responseJson.results[0].skin_color).to.be.a('string');
    pm.expect(responseJson.results[0].eye_color).to.be.a('string');
    pm.expect(responseJson.results[0].birth_year).to.be.a('string');
    pm.expect(responseJson.results[0].gender).to.be.a('string');
    pm.expect(responseJson.results[0].homeworld).to.be.a('string');
    pm.expect(responseJson.results[0].films).to.be.an('array');
    pm.expect(responseJson.results[0].starships).to.be.an('array');
    pm.expect(responseJson.results[0].vehicles).to.be.a('array');
    pm.expect(responseJson.results[0].species).to.be.a('array');
    pm.expect(responseJson.results[0].created).to.be.a('string');
    pm.expect(responseJson.results[0].edited).to.be.a('string');
    pm.expect(responseJson.results[0].url).to.include('https://swapi.dev/api/people/');
})