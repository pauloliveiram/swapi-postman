pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("The response has all expected properties", () => {
    const responseJson = pm.response.json();

    pm.expect(responseJson.count).to.be.a('number');
    pm.expect(responseJson.next).to.include('https://swapi.dev/api/species/?page=');
    pm.expect(responseJson.previous).to.be.null;
    pm.expect(responseJson.results).to.be.an('array');
    pm.expect(responseJson.results[0].name).to.be.a('string');
    pm.expect(responseJson.results[0].classification).to.be.a('string');
    pm.expect(responseJson.results[0].designation).to.be.a('string');
    pm.expect(responseJson.results[0].average_height).to.be.a('string');
    pm.expect(responseJson.results[0].skin_colors).to.be.a('string');
    pm.expect(responseJson.results[0].hair_colors).to.be.a('string');
    pm.expect(responseJson.results[0].eye_colors).to.be.a('string');
    pm.expect(responseJson.results[0].average_lifespan).to.be.a('string');
    pm.expect(responseJson.results[0].homeworld).to.include('https://swapi.dev/api/planets/');
    pm.expect(responseJson.results[0].language).to.be.an('string');
    pm.expect(responseJson.results[0].people).to.be.a('array');
    pm.expect(responseJson.results[0].people[0]).to.include('https://swapi.dev/api/people/');
    pm.expect(responseJson.results[0].films).to.be.a('array');
    pm.expect(responseJson.results[0].films[0]).to.include('https://swapi.dev/api/films/');
    pm.expect(responseJson.results[0].created).to.be.a('string');
    pm.expect(responseJson.results[0].edited).to.be.a('string');
    pm.expect(responseJson.results[0].url).to.include('https://swapi.dev/api/species/');
})